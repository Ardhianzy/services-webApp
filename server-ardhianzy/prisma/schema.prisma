generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DifficultyLevel {
  BEGINNER
  INTERMEDIATE
  EXPERT
}

enum ArticleCategory {
  IDEAS_AND_TRADITIONS
  POP_CULTURE
}

model Admin {
  id         String   @id @default(cuid())
  image      String
  first_name String
  last_name  String
  username   String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Relations
  ToT        ToT[]        @relation(name: "AdminToT")
  Monologues Monologues[] @relation(name: "Admin_mono")
  Research   Research[]   @relation(name: "Admin_research")
  Article    Article[]    @relation(name: "admin_article")
  Shop       Shop[]       @relation(name: "Admin_shop")
  Megazine   Megazine[]   @relation(name: "Admin_Megazine")
}

model ToT {
  id              String  @id @default(cuid())
  admin_id        String
  image           String?
  philosofer      String
  geoorigin       String
  detail_location String
  years           String

  slug             String  @unique
  meta_title       String?
  meta_description String?
  keywords         String?

  is_published Boolean  @default(false)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  // Relations
  admin            Admin              @relation(fields: [admin_id], references: [id], name: "AdminToT")
  ToT_meta         ToT_meta[]         @relation(name: "ToT_meta")
  Reading_guidline Reading_guidline[] @relation(name: "ToT_guide")

  @@map("tot")
}

model ToT_meta {
  id         String @id @default(cuid())
  ToT_id     String
  metafisika String
  epsimologi String
  aksiologi  String
  conclusion String

  tot ToT @relation(fields: [ToT_id], references: [id], name: "ToT_meta")

  @@map("tot_meta")
}

model Reading_guidline {
  id        String          @id @default(cuid())
  ToT_id    String
  title     String
  image     String?
  author    String
  publisher String
  year      String
  detailed  String
  category  DifficultyLevel
  tot       ToT             @relation(fields: [ToT_id], references: [id], name: "ToT_guide")

  @@map("reading_guidline")
}

model Monologues {
  id       String  @id @default(cuid())
  admin_id String
  title    String
  image    String?
  dialog   String
  judul    String

  slug             String? @unique
  meta_title       String?
  meta_description String?

  is_published    Boolean   @default(false)
  pdf_file_id     String?
  pdf_url         String?
  pdf_filename    String?
  pdf_mime        String?
  pdf_size        Int?
  pdf_uploaded_at DateTime?
  created_at      DateTime  @default(now())
  updated_at      DateTime  @updatedAt

  admin Admin @relation(fields: [admin_id], references: [id], name: "Admin_mono")

  @@map("Monologues")
}

model Research {
  id             String   @id @default(cuid())
  admin_id       String
  research_title String
  slug           String   @unique
  research_sum   String
  image          String
  researcher     String
  research_date  DateTime
  fiel           String

  pdf_file_id     String?
  pdf_url         String?
  pdf_filename    String?
  pdf_mime        String?
  pdf_size        Int?
  pdf_uploaded_at DateTime?

  meta_title       String?
  meta_description String?
  keywords         String?

  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  is_published Boolean  @default(false)

  admin Admin @relation(fields: [admin_id], references: [id], name: "Admin_research")

  @@map("researches")
}

model Article {
  id               String          @id @default(cuid())
  admin_id         String
  title            String
  slug             String          @unique
  image            String
  content          String
  author           String
  date             DateTime
  category         ArticleCategory
  meta_title       String?
  meta_description String?
  keywords         String?
  excerpt          String?
  canonical_url    String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  is_published Boolean @default(false)
  is_featured  Boolean @default(false)
  view_count   Int     @default(0)

  admin Admin @relation(fields: [admin_id], references: [id], name: "admin_article")

  @@map("articles")
}

model Shop {
  id       String @id @default(cuid())
  admin_id String
  stock    String
  title    String
  category String
  price    String
  link     String
  desc     String
  image    String

  slug             String? @unique
  meta_title       String?
  meta_description String?
  is_available     Boolean @default(true)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  admin Admin @relation(fields: [admin_id], references: [id], name: "Admin_shop")

  @@map("shops")
}

model Megazine {
  id               String  @id @default(cuid())
  admin_id         String
  title            String
  description      String
  megazine_isi     String
  image            String
  slug             String  @unique
  meta_title       String?
  meta_description String?
  keywords         String?

  pdf_file_id     String?
  pdf_url         String?
  pdf_filename    String?
  pdf_mime        String?
  pdf_size        Int?
  pdf_uploaded_at DateTime?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  admin Admin @relation(fields: [admin_id], references: [id], name: "Admin_Megazine")

  @@map("megazine")
}
